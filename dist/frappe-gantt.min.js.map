{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/jdate/jdate-class.js","../src/date_utils_jalali.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nexport default {\r\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\r\n        if (date instanceof Date) { \r\n            return date;\r\n        }\r\n        if (typeof date === 'string') {\r\n            let date_parts, time_parts;\r\n            const parts = date.split(' ');\r\n\r\n            date_parts = parts[0]\r\n                .split(date_separator)\r\n                .map((val) => parseInt(val, 10));\r\n            time_parts = parts[1] && parts[1].split(time_separator);\r\n\r\n            // month is 0 indexed\r\n            date_parts[1] = date_parts[1] - 1;\r\n\r\n            let vals = date_parts;\r\n\r\n            if (time_parts && time_parts.length) {\r\n                if (time_parts.length == 4) {\r\n                    time_parts[3] = '0.' + time_parts[3];\r\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\r\n                }\r\n                vals = vals.concat(time_parts);\r\n            }\r\n\r\n            return new Date(...vals);\r\n        }\r\n    },\r\n\r\n    to_string(date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    },\r\n    dateTimeFormatters:{},\r\n    getDateTimeFormatter: function(lang){\r\n        if(this.dateTimeFormatters[lang]) return this.dateTimeFormatters[lang];\r\n        var f = new Intl.DateTimeFormat(lang, {\r\n            month: 'long'\r\n        });\r\n        this.dateTimeFormatters[lang] = f;\r\n        return f;\r\n    },\r\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\r\n        const dateTimeFormat = this.getDateTimeFormatter(lang);\r\n        const month_name = dateTimeFormat.format(date);\r\n        const month_name_capitalized =\r\n            month_name.charAt(0).toUpperCase() + month_name.slice(1);\r\n\r\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n            MMMM: month_name_capitalized,\r\n            MMM: month_name_capitalized,\r\n        };\r\n\r\n        let str = format_string;\r\n        const formatted_values = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach((key) => {\r\n                if (str.includes(key)) {\r\n                    str = str.replace(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replace(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    },\r\n\r\n    diff(date_a, date_b, scale = DAY) {\r\n        let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n        milliseconds = date_a - date_b;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        months = days / 30;\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return Math.floor(\r\n            {\r\n                milliseconds,\r\n                seconds,\r\n                minutes,\r\n                hours,\r\n                days,\r\n                months,\r\n                years,\r\n            }[scale]\r\n        );\r\n    },\r\n\r\n    today() {\r\n        const vals = this.get_date_values(new Date()).slice(0, 3);\r\n        return new Date(...vals);\r\n    },\r\n\r\n    now() {\r\n        return new Date();\r\n    },\r\n\r\n    add(date, qty, scale) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n        ];\r\n        return new Date(...vals);\r\n    },\r\n\r\n    start_of(date, scale) {\r\n        const scores = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0,\r\n        };\r\n\r\n        function should_reset(_scale) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n        ];\r\n\r\n        return new Date(...vals);\r\n    },\r\n\r\n    clone(date) {\r\n        return new Date(...this.get_date_values(date));\r\n    },\r\n\r\n    get_date_values(date) {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds(),\r\n        ];\r\n    },\r\n\r\n    get_days_in_month(date) {\r\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 1) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Feb\r\n        const year = date.getFullYear();\r\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\r\n            return 29;\r\n        }\r\n        return 28;\r\n    },\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n    str = str + '';\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n","/*\n JavaScript functions for the Fourmilab Calendar Converter\n\n by John Walker  --  September, MIM\n http://www.fourmilab.ch/documents/calendar/\n\n This program is in the public domain.\n */\n\n/*  MOD  --  Modulus function which works for non-integers.  */\n\nfunction mod(a, b) {\n\treturn a - (b * Math.floor(a / b));\n}\n\n//  LEAP_GREGORIAN  --  Is a given year in the Gregorian calendar a leap year ?\n\nfunction leap_gregorian(year) {\n\treturn ((year % 4) == 0) &&\n\t\t(!(((year % 100) == 0) && ((year % 400) != 0)));\n}\n\n//  GREGORIAN_TO_JD  --  Determine Julian day number from Gregorian calendar date\n\nvar GREGORIAN_EPOCH = 1721425.5;\n\nfunction gregorian_to_jd(year, month, day) {\n\treturn (GREGORIAN_EPOCH - 1) +\n\t\t(365 * (year - 1)) +\n\t\tMath.floor((year - 1) / 4) +\n\t\t(-Math.floor((year - 1) / 100)) +\n\t\tMath.floor((year - 1) / 400) +\n\t\tMath.floor((((367 * month) - 362) / 12) +\n\t\t\t((month <= 2) ? 0 :\n\t\t\t\t(leap_gregorian(year) ? -1 : -2)\n\t\t\t\t) +\n\t\t\tday);\n}\n\n//  JD_TO_GREGORIAN  --  Calculate Gregorian calendar date from Julian day\n\nfunction jd_to_gregorian(jd) {\n\tvar wjd, depoch, quadricent, dqc, cent, dcent, quad, dquad,\n\t\tyindex, year, yearday, leapadj;\n\n\twjd = Math.floor(jd - 0.5) + 0.5;\n\tdepoch = wjd - GREGORIAN_EPOCH;\n\tquadricent = Math.floor(depoch / 146097);\n\tdqc = mod(depoch, 146097);\n\tcent = Math.floor(dqc / 36524);\n\tdcent = mod(dqc, 36524);\n\tquad = Math.floor(dcent / 1461);\n\tdquad = mod(dcent, 1461);\n\tyindex = Math.floor(dquad / 365);\n\tyear = (quadricent * 400) + (cent * 100) + (quad * 4) + yindex;\n\tif (!((cent == 4) || (yindex == 4))) {\n\t\tyear++;\n\t}\n\tyearday = wjd - gregorian_to_jd(year, 1, 1);\n\tleapadj = ((wjd < gregorian_to_jd(year, 3, 1)) ? 0\n\t\t:\n\t\t(leap_gregorian(year) ? 1 : 2)\n\t\t);\n\tvar month = Math.floor((((yearday + leapadj) * 12) + 373) / 367),\n\t\tday = (wjd - gregorian_to_jd(year, month, 1)) + 1;\n\n\treturn [year, month, day];\n}\n\n\nvar PERSIAN_EPOCH = 1948320.5;\n\n//  PERSIAN_TO_JD  --  Determine Julian day from Persian date\n\nfunction persian_to_jd(year, month, day) {\n\tvar epbase, epyear;\n\n\tepbase = year - ((year >= 0) ? 474 : 473);\n\tepyear = 474 + mod(epbase, 2820);\n\n\treturn day +\n\t\t((month <= 7) ?\n\t\t\t((month - 1) * 31) :\n\t\t\t(((month - 1) * 30) + 6)\n\t\t\t) +\n\t\tMath.floor(((epyear * 682) - 110) / 2816) +\n\t\t(epyear - 1) * 365 +\n\t\tMath.floor(epbase / 2820) * 1029983 +\n\t\t(PERSIAN_EPOCH - 1);\n}\n\n//  JD_TO_PERSIAN  --  Calculate Persian date from Julian day\n\nfunction jd_to_persian(jd) {\n\tvar year, month, day, depoch, cycle, cyear, ycycle,\n\t\taux1, aux2, yday;\n\n\n\tjd = Math.floor(jd) + 0.5;\n\n\tdepoch = jd - persian_to_jd(475, 1, 1);\n\tcycle = Math.floor(depoch / 1029983);\n\tcyear = mod(depoch, 1029983);\n\tif (cyear == 1029982) {\n\t\tycycle = 2820;\n\t} else {\n\t\taux1 = Math.floor(cyear / 366);\n\t\taux2 = mod(cyear, 366);\n\t\tycycle = Math.floor(((2134 * aux1) + (2816 * aux2) + 2815) / 1028522) +\n\t\t\taux1 + 1;\n\t}\n\tyear = ycycle + (2820 * cycle) + 474;\n\tif (year <= 0) {\n\t\tyear--;\n\t}\n\tyday = (jd - persian_to_jd(year, 1, 1)) + 1;\n\tmonth = (yday <= 186) ? Math.ceil(yday / 31) : Math.ceil((yday - 6) / 30);\n\tday = (jd - persian_to_jd(year, month, 1)) + 1;\n\treturn [year, month, day];\n}\n// Cache original `Date` class. User may set window.Date = JDate\nvar Date = window['Date'];\n\nfunction digits_fa2en(text) {\n\treturn text.replace(/[۰-۹]/g, function (d) {\n\t\treturn String.fromCharCode(d.charCodeAt(0) - 1728);\n\t});\n}\nfunction pad2(number) {\n\treturn number < 10 ? '0' + number: number;\n}\nfunction persian_to_jd_fixed(year, month, day) {\n\t/*\n\tFix `persian_to_jd` so we can use negative or large values for month, e.g:\n\tpersian_to_jd_fixed(1393, 26, 1) == persian_to_jd_fixed(1395, 2, 1)\n\tpersian_to_jd_fixed(1393, -2, 1) == persian_to_jd_fixed(1392, 10, 1)\n\t */\n\tif (month > 12 || month <= 0) {\n\t\tvar yearDiff = Math.floor((month - 1) / 12);\n\t\tyear += yearDiff;\n\t\tmonth = month - yearDiff * 12;\n\t}\n\treturn persian_to_jd(year, month, day);\n}\nfunction parseDate(string, convertToPersian) {\n\t/*\n\t http://en.wikipedia.org/wiki/ISO_8601\n\t http://dygraphs.com/date-formats.html\n\t https://github.com/arshaw/xdate/blob/master/src/xdate.js#L414\n\t https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse\n\t tests:\n\t +parseDate('2014') == +new Date('2014')\n\t +parseDate('2014-2') == +new Date('2014-02')\n\t +parseDate('2014-2-3') == +new Date('2014-02-03')\n\t +parseDate('2014-02-03 12:11') == +new Date('2014/02/03 12:11')\n\t +parseDate('2014-02-03T12:11') == +new Date('2014/02/03 12:11')\n\t parseDate('2014/02/03T12:11') == undefined\n\t +parseDate('2014/02/03 12:11:10.2') == +new Date('2014/02/03 12:11:10') + 200\n\t +parseDate('2014/02/03 12:11:10.02') == +new Date('2014/02/03 12:11:10') + 20\n\t parseDate('2014/02/03 12:11:10Z') == undefined\n\t +parseDate('2014-02-03T12:11:10Z') == +new Date('2014-02-03T12:11:10Z')\n\t +parseDate('2014-02-03T12:11:10+0000') == +new Date('2014-02-03T12:11:10Z')\n\t +parseDate('2014-02-03T10:41:10+0130') == +new Date('2014-02-03T12:11:10Z')\n\t */\n\tvar re = /^(\\d|\\d\\d|\\d\\d\\d\\d)(?:([-\\/])(\\d{1,2})(?:\\2(\\d|\\d\\d|\\d\\d\\d\\d))?)?(([ T])(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d+))?)?(Z|([+-])(\\d{2})(?::?(\\d{2}))?)?)?$/,\n\t\tmatch = re.exec(string);\n\t// re.exec('2012-4-5 01:23:10.1111+0130')\n\t//  0                              1       2    3    4    5                      6    7     8     9     10      11       12   13    14\n\t// [\"2012-4-5 01:23:10.1111+0330\", \"2012\", \"-\", \"4\", \"5\", \" 01:23:10.1111+0130\", \" \", \"01\", \"23\", \"10\", \"1111\", \"+0330\", \"+\", \"03\", \"30\"]\n\tif (!match) return;\n\tvar separator = match[2],\n\t\ttimeSeparator = match[6],\n\t\tyear = +match[1],\n\t\tmonth = +match[3] || 1,\n\t\tday = +match[4] || 1,\n\t\tisISO = (separator != '/') && (match[6] != ' '),\n\t\thour = +match[7] || 0,\n\t\tminute = +match[8] || 0,\n\t\tseconds = +match[9] || 0,\n\t\tmillis = +('0.' + (match[10] || '0')) * 1000,\n\t\ttz = match[11],\n\t\tisNonLocal = isISO && (tz || !match[5]),\n\t\ttzOffset = (match[12] == '-' ? -1 : 1) * ((+match[13] || 0) * 60 + (+match[14] || 0));\n\t// timezone should be empty if dates are with / (2012/1/10)\n\tif ((tz || timeSeparator == 'T') && !isISO) return;\n\t// one and only-one of year/day should be 4-chars (2012/1/10 vs 10/1/2012)\n\tif ((day >= 1000) == (year >= 1000)) return;\n\tif (day >= 1000) {\n\t\t// year and day only can be swapped if using '/' as separator\n\t\tif (separator == '-') return;\n\t\tday = +match[1];\n\t\tyear = day;\n\t}\n\tif (convertToPersian) {\n\t\tvar persian = jd_to_gregorian(persian_to_jd_fixed(year, month, day));\n\t\tyear = persian[0];\n\t\tmonth = persian[1];\n\t\tday = persian[2];\n\t}\n\tvar date = new Date(year, month - 1, day, hour, minute, seconds, millis);\n\tif (isNonLocal) {\n\t\tdate.setUTCMinutes(date.getUTCMinutes() - date.getTimezoneOffset() + tzOffset);\n\t}\n\treturn date;\n}\n\n/**\n * @param {Object=} a ,may have different types for different semantics: 1) string: parse a date\n * \t\t2) Date object: clone a date object  3) number: value for year\n * @param {Number=} month\n * @param {Number=} day\n * @param {Number=} hour\n * @param {Number=} minute\n * @param {Number=} second\n * @param {Number=} millisecond\n * @constructor\n * @extends {Date}\n */\nfunction JDate(a, month, day, hour, minute, second, millisecond) {\n\tif (typeof a == 'string') {\n\t\tthis._d = parseDate(digits_fa2en(a), true);\n\t\tif (!this._d) throw 'Cannot parse date string'\n\t} else if (arguments.length == 0)\n\t\tthis._d = new Date();\n\telse if (arguments.length == 1) {\n\t\tthis._d = new Date((a instanceof JDate)?a._d:a);\n\t} else {\n\t\tvar persian = jd_to_gregorian(persian_to_jd_fixed(a, (month || 0) + 1, day || 1));\n\t\tthis._d = new Date(persian[0], persian[1] - 1, persian[2], hour || 0, minute || 0, second || 0, millisecond || 0);\n\t}\n\tthis['_date'] = this._d;\n\tthis._cached_date_ts = null;\n\tthis._cached_date = [0, 0, 0];\n\tthis._cached_utc_date_ts = null;\n\tthis._cached_utc_date = [0, 0, 0];\n}\n\nJDate.prototype = {\n\t/**\n\t * returns current Jalali date representation of internal date object, eg. [1394, 12, 5]\n\t * Caches the converted Jalali date for improving performance\n\t * @returns {Array}\n\t */\n\t_persianDate: function () {\n\t\tif (this._cached_date_ts != +this._d) {\n\t\t\tthis._cached_date_ts = +this._d;\n\t\t\tthis._cached_date = jd_to_persian(gregorian_to_jd(this._d.getFullYear(), this._d.getMonth() + 1, this._d.getDate()));\n\t\t}\n\t\treturn this._cached_date\n\t},\n\t/**\n\t * Exactly like `_persianDate` but for UTC value of date\n\t */\n\t_persianUTCDate: function () {\n\t\tif (this._cached_utc_date_ts != +this._d) {\n\t\t\tthis._cached_utc_date_ts = +this._d;\n\t\t\tthis._cached_utc_date = jd_to_persian(gregorian_to_jd(this._d.getUTCFullYear(), this._d.getUTCMonth() + 1, this._d.getUTCDate()));\n\t\t}\n\t\treturn this._cached_utc_date\n\t},\n\t/**\n\t *\n\t * @param which , which component of date to change? 0 for year, 1 for month, 2 for day\n\t * @param value , value of specified component\n\t * @param {Number=} dayValue , change the day along-side specified component, used for setMonth(month[, dayValue])\n\t */\n\t_setPersianDate: function (which, value, dayValue) {\n\t\tvar persian = this._persianDate();\n\t\tpersian[which] = value;\n\t\tif (dayValue !== undefined) {\n\t\t\tpersian[2] = dayValue;\n\t\t}\n\t\tvar new_date = jd_to_gregorian(persian_to_jd_fixed(persian[0], persian[1], persian[2]));\n\t\tthis._d.setFullYear(new_date[0]);\n\t\tthis._d.setMonth(new_date[1] - 1, new_date[2]);\n\t},\n\t/**\n\t * Exactly like `_setPersianDate`, but operates UTC value\n\t */\n\t_setUTCPersianDate: function (which, value, dayValue) {\n\t\tvar persian = this._persianUTCDate();\n\t\tif (dayValue !== undefined) {\n\t\t\tpersian[2] = dayValue;\n\t\t}\n\t\tpersian[which] = value;\n\t\tvar new_date = jd_to_gregorian(persian_to_jd_fixed(persian[0], persian[1], persian[2]));\n\t\tthis._d.setUTCFullYear(new_date[0]);\n\t\tthis._d.setUTCMonth(new_date[1] - 1, new_date[2]);\n\t}\n};\n// All date getter methods\nJDate.prototype['getDate'] = function () {\n\treturn this._persianDate()[2]\n};\nJDate.prototype['getMonth'] = function () {\n\treturn this._persianDate()[1] - 1\n};\nJDate.prototype['getFullYear'] = function () {\n\treturn this._persianDate()[0]\n};\nJDate.prototype['getUTCDate'] = function () {\n\treturn this._persianUTCDate()[2]\n};\nJDate.prototype['getUTCMonth'] = function () {\n\treturn this._persianUTCDate()[1] - 1\n};\nJDate.prototype['getUTCFullYear'] = function () {\n\treturn this._persianUTCDate()[0]\n};\n// All date setter methods\nJDate.prototype['setDate'] = function (dayValue) {\n\tthis._setPersianDate(2, dayValue)\n};\nJDate.prototype['setFullYear'] = function (yearValue) {\n\tthis._setPersianDate(0, yearValue)\n};\nJDate.prototype['setMonth'] = function (monthValue, dayValue) {\n\tthis._setPersianDate(1, monthValue + 1, dayValue)\n};\nJDate.prototype['setUTCDate'] = function (dayValue) {\n\tthis._setUTCPersianDate(2, dayValue)\n};\nJDate.prototype['setUTCFullYear'] = function (yearValue) {\n\tthis._setUTCPersianDate(0, yearValue)\n};\nJDate.prototype['setUTCMonth'] = function (monthValue, dayValue) {\n\tthis._setUTCPersianDate(1, monthValue + 1, dayValue)\n};\n/**\n * The Date.toLocaleString() method can return a string with a language sensitive representation of this date,\n * so we change it to return date in Jalali calendar\n */\nJDate.prototype['toLocaleString'] = function () {\n\treturn this.getFullYear() + '/' + pad2(this.getMonth() + 1) + '/' + pad2(this.getDate()) + ' ' +\n\t\tpad2(this.getHours()) + ':' + pad2(this.getMinutes()) + ':' + pad2(this.getSeconds());\n};\n/**\n * The Date.now() method returns the number of milliseconds elapsed since 1 January 1970 00:00:00 UTC.\n */\nJDate['now'] = Date.now;\n/**\n * parses a string representation of a date, and returns the number of milliseconds since January 1, 1970, 00:00:00 UTC.\n */\nJDate['parse'] = function (string) {\n\tnew JDate(string)['getTime']()\n};\n/**\n * The Date.UTC() method accepts the same parameters as the longest form of the constructor, and returns the number of\n * milliseconds in a Date object since January 1, 1970, 00:00:00, universal time.\n */\nJDate['UTC'] = function (year, month, date, hours, minutes, seconds, milliseconds) {\n\tvar d = jd_to_gregorian(persian_to_jd_fixed(year, month + 1, date || 1));\n\treturn Date.UTC(d[0], d[1] - 1, d[2], hours || 0, minutes || 0, seconds || 0, milliseconds || 0);\n};\n// Proxy all time-related methods to internal date object\nvar i, dateProps = ('getHours getMilliseconds getMinutes getSeconds getTime getUTCDay getUTCHours ' +\n\t\t'getTimezoneOffset getUTCMilliseconds getUTCMinutes getUTCSeconds setHours setMilliseconds setMinutes ' +\n\t\t'setSeconds setTime setUTCHours setUTCMilliseconds setUTCMinutes setUTCSeconds toDateString toISOString ' +\n\t\t'toJSON toString toLocaleDateString toLocaleTimeString toTimeString toUTCString valueOf getDay')\n\t\t\t.split(' '),\n\tcreateWrapper = function (k) {\n\t\treturn function () {\n\t\t\treturn this._d[k].apply(this._d, arguments)\n\t\t}\n\t};\n\nfor (i = 0; i < dateProps.length; i++)\n\tJDate.prototype[dateProps[i]] = createWrapper(dateProps[i]);\n// Export `JDate` class to global scope\nwindow['JDate'] = JDate;\nexport default JDate;\n","import JDate from './jdate/jdate-class';\r\nconst YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nexport default {\r\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\r\n        if (date instanceof Date) { \r\n            return new JDate(date);\r\n        }\r\n        if (typeof date === 'string') {\r\n            var jd= new JDate(date);\r\n            jd.setHours(0,0,0,0);\r\n            return jd;\r\n        }\r\n    },\r\n\r\n    to_string(date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    },\r\n    dateTimeFormatters:{},\r\n    getDateTimeFormatter: function(lang){\r\n        if(this.dateTimeFormatters[lang]) return this.dateTimeFormatters[lang];\r\n        var f = new Intl.DateTimeFormat(lang, {\r\n            month: 'long'\r\n        });\r\n        this.dateTimeFormatters[lang] = f;\r\n        return f;\r\n    },\r\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\r\n        const dateTimeFormat = this.getDateTimeFormatter(lang);\r\n        const month_name = dateTimeFormat.format(date._d);\r\n        const month_name_capitalized =\r\n            month_name.charAt(0).toUpperCase() + month_name.slice(1);\r\n\r\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n            MMMM: month_name_capitalized,\r\n            MMM: month_name_capitalized,\r\n        };\r\n\r\n        let str = format_string;\r\n        const formatted_values = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach((key) => {\r\n                if (str.includes(key)) {\r\n                    str = str.replace(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replace(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    },\r\n\r\n    diff(date_a, date_b, scale = DAY) {\r\n        var d_a = date_a;\r\n        var d_b = date_b;\r\n        if(d_a instanceof JDate){\r\n            d_a = d_a._d;\r\n        } \r\n        if(d_b instanceof JDate){\r\n            d_b = d_b._d;\r\n        } \r\n        let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n        milliseconds = d_a - d_b;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        months = days / 30;\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return Math.floor(\r\n            {\r\n                milliseconds,\r\n                seconds,\r\n                minutes,\r\n                hours,\r\n                days,\r\n                months,\r\n                years,\r\n            }[scale]\r\n        );\r\n    },\r\n\r\n    today() {\r\n        const vals = this.get_date_values(new JDate()).slice(0, 3);\r\n        var jd = new JDate(...vals);\r\n        jd.setHours(0,0,0,0);\r\n        return jd;\r\n    },\r\n\r\n    now() {\r\n        return new JDate();\r\n    },\r\n\r\n    add(date, qty, scale) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n        ];\r\n        return new JDate(...vals);\r\n    },\r\n\r\n    start_of(date, scale) {\r\n        const scores = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0,\r\n        };\r\n\r\n        function should_reset(_scale) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n        ];\r\n\r\n        var jd= new JDate(...vals);\r\n        jd.setHours(0,0,0,0);\r\n        return jd;\r\n    },\r\n\r\n    clone(date) {\r\n        var jd= new JDate(...this.get_date_values(date));\r\n        jd.setHours(0,0,0,0);\r\n        return jd;\r\n    },\r\n\r\n    get_date_values(date) {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds(),\r\n        ];\r\n    },\r\n\r\n    get_days_in_month(date) {\r\n        const no_of_days = [31,31,31,31,31,31,30,30,30,30,30];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 12) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Esfand\r\n        const year = date.getFullYear();\r\n        if (this.isLeapYearJalali(year)) {\r\n            return 30;\r\n        }\r\n        return 29;\r\n    },\r\n    isLeapYearJalali(year) {\r\n        const matches = [1, 5, 9, 13, 17, 22, 26, 30];\r\n        const modulus = year % 33;\r\n        return matches.includes(modulus)\r\n     }\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n    str = str + '';\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n","export function $(expr, con) {\r\n    return typeof expr === 'string'\r\n        ? (con || document).querySelector(expr)\r\n        : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, attrs) {\r\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    for (let attr in attrs) {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement, attr, from, to) {\r\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n    if (animatedSvgElement === svgElement) {\r\n        // triggered 2nd time programmatically\r\n        // trigger artificial click event\r\n        const event = document.createEvent('HTMLEvents');\r\n        event.initEvent('click', true, true);\r\n        event.eventName = 'click';\r\n        animatedSvgElement.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nfunction getAnimationElement(\r\n    svgElement,\r\n    attr,\r\n    from,\r\n    to,\r\n    dur = '0.4s',\r\n    begin = '0.1s'\r\n) {\r\n    const animEl = svgElement.querySelector('animate');\r\n    if (animEl) {\r\n        $.attr(animEl, {\r\n            attributeName: attr,\r\n            from,\r\n            to,\r\n            dur,\r\n            begin: 'click + ' + begin, // artificial click\r\n        });\r\n        return svgElement;\r\n    }\r\n\r\n    const animateElement = createSVG('animate', {\r\n        attributeName: attr,\r\n        from,\r\n        to,\r\n        dur,\r\n        begin,\r\n        calcMode: 'spline',\r\n        values: from + ';' + to,\r\n        keyTimes: '0; 1',\r\n        keySplines: cubic_bezier('ease-out'),\r\n    });\r\n    svgElement.appendChild(animateElement);\r\n\r\n    return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name) {\r\n    return {\r\n        ease: '.25 .1 .25 1',\r\n        linear: '0 0 1 1',\r\n        'ease-in': '.42 0 1 1',\r\n        'ease-out': '0 0 .58 1',\r\n        'ease-in-out': '.42 0 .58 1',\r\n    }[name];\r\n}\r\n\r\n$.on = (element, event, selector, callback) => {\r\n    if (!callback) {\r\n        callback = selector;\r\n        $.bind(element, event, callback);\r\n    } else {\r\n        $.delegate(element, event, selector, callback);\r\n    }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n    element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, event, callback) => {\r\n    event.split(/\\s+/).forEach(function (event) {\r\n        element.addEventListener(event, callback);\r\n    });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n    element.addEventListener(event, function (e) {\r\n        const delegatedTarget = e.target.closest(selector);\r\n        if (delegatedTarget) {\r\n            e.delegatedTarget = delegatedTarget;\r\n            callback.call(this, e, delegatedTarget);\r\n        }\r\n    });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n    if (!element) return null;\r\n\r\n    if (element.matches(selector)) {\r\n        return element;\r\n    }\r\n\r\n    return $.closest(selector, element.parentNode);\r\n};\r\n\r\n$.attr = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.attr(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.setAttribute(attr, value);\r\n};\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG, animateSVG } from './svg_utils';\r\n\r\nexport default class Bar {\r\n    constructor(gantt, task) {\r\n        this.set_defaults(gantt, task);\r\n        this.prepare();\r\n        this.draw();\r\n        this.bind();\r\n    }\r\n\r\n    set_defaults(gantt, task) {\r\n        this.action_completed = false;\r\n        this.gantt = gantt;\r\n        this.task = task;\r\n    }\r\n\r\n    prepare() {\r\n        this.prepare_values();\r\n        this.prepare_helpers();\r\n    }\r\n\r\n    prepare_values() {\r\n        this.invalid = this.task.invalid;\r\n        this.height = this.gantt.options.bar_height;\r\n        this.x = this.compute_x();\r\n        this.y = this.compute_y();\r\n        this.corner_radius = this.gantt.options.bar_corner_radius;\r\n        this.duration =\r\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\r\n            this.gantt.options.step;\r\n        this.width = this.gantt.options.column_width * this.duration;\r\n        this.progress_width =\r\n            this.gantt.options.column_width *\r\n                this.duration *\r\n                (this.task.progress / 100) || 0;\r\n        this.group = createSVG('g', {\r\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\r\n            'data-id': this.task.id,\r\n        });\r\n        this.bar_group = createSVG('g', {\r\n            class: 'bar-group',\r\n            append_to: this.group,\r\n        });\r\n        this.handle_group = createSVG('g', {\r\n            class: 'handle-group',\r\n            append_to: this.group,\r\n        });\r\n    }\r\n\r\n    prepare_helpers() {\r\n        SVGElement.prototype.getX = function () {\r\n            return +this.getAttribute('x');\r\n        };\r\n        SVGElement.prototype.getY = function () {\r\n            return +this.getAttribute('y');\r\n        };\r\n        SVGElement.prototype.getWidth = function () {\r\n            return +this.getAttribute('width');\r\n        };\r\n        SVGElement.prototype.getHeight = function () {\r\n            return +this.getAttribute('height');\r\n        };\r\n        SVGElement.prototype.getEndX = function () {\r\n            return this.getX() + this.getWidth();\r\n        };\r\n    }\r\n\r\n    draw() {\r\n        this.draw_bar();\r\n        this.draw_progress_bar();\r\n        this.draw_label();\r\n        this.draw_resize_handles();\r\n    }\r\n\r\n    draw_bar() {\r\n        this.$bar = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar, 'width', 0, this.width);\r\n\r\n        if (this.invalid) {\r\n            this.$bar.classList.add('bar-invalid');\r\n        }\r\n    }\r\n\r\n    draw_progress_bar() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.progress_width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar-progress',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\r\n    }\r\n\r\n    draw_label() {\r\n        createSVG('text', {\r\n            x: this.x + this.width / 2,\r\n            y: this.y + this.height / 2,\r\n            innerHTML: this.task.name,\r\n            class: 'bar-label',\r\n            append_to: this.bar_group,\r\n        });\r\n        // labels get BBox in the next tick\r\n        requestAnimationFrame(() => this.update_label_position());\r\n    }\r\n\r\n    draw_resize_handles() {\r\n        if (this.invalid) return;\r\n\r\n        const bar = this.$bar;\r\n        const handle_width = 8;\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + bar.getWidth() - 9,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle right',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        createSVG('rect', {\r\n            x: bar.getX() + 1,\r\n            y: bar.getY() + 1,\r\n            width: handle_width,\r\n            height: this.height - 2,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'handle left',\r\n            append_to: this.handle_group,\r\n        });\r\n\r\n        if (this.task.progress && this.task.progress < 100) {\r\n            this.$handle_progress = createSVG('polygon', {\r\n                points: this.get_progress_polygon_points().join(','),\r\n                class: 'handle progress',\r\n                append_to: this.handle_group,\r\n            });\r\n        }\r\n    }\r\n\r\n    get_progress_polygon_points() {\r\n        const bar_progress = this.$bar_progress;\r\n        return [\r\n            bar_progress.getEndX() - 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX() + 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX(),\r\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\r\n        ];\r\n    }\r\n\r\n    bind() {\r\n        if (this.invalid) return;\r\n        this.setup_click_event();\r\n    }\r\n\r\n    setup_click_event() {\r\n        $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.show_popup();\r\n            this.gantt.unselect_all();\r\n            this.group.classList.add('active');\r\n        });\r\n\r\n        $.on(this.group, 'dblclick', (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.gantt.trigger_event('click', [this.task]);\r\n        });\r\n    }\r\n\r\n    show_popup() {\r\n        if (this.gantt.bar_being_dragged) return;\r\n\r\n        const start_date = date_utils.format(\r\n            this.task._start,\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        const end_date = date_utils.format(\r\n            date_utils.add(this.task._end, -1, 'second'),\r\n            'MMM D',\r\n            this.gantt.options.language\r\n        );\r\n        const subtitle = start_date + ' - ' + end_date;\r\n\r\n        this.gantt.show_popup({\r\n            target_element: this.$bar,\r\n            title: this.task.name,\r\n            subtitle: subtitle,\r\n            task: this.task,\r\n        });\r\n    }\r\n\r\n    update_bar_position({ x = null, width = null }) {\r\n        const bar = this.$bar;\r\n        if (x) {\r\n            // get all x values of parent task\r\n            const xs = this.task.dependencies.map((dep) => {\r\n                return this.gantt.get_bar(dep).$bar.getX();\r\n            });\r\n            // child task must not go before parent\r\n            const valid_x = xs.reduce((prev, curr) => {\r\n                return x >= curr;\r\n            }, x);\r\n            if (!valid_x) {\r\n                width = null;\r\n                return;\r\n            }\r\n            this.update_attr(bar, 'x', x);\r\n        }\r\n        if (width && width >= this.gantt.options.column_width) {\r\n            this.update_attr(bar, 'width', width);\r\n        }\r\n        this.update_label_position();\r\n        this.update_handle_position();\r\n        this.update_progressbar_position();\r\n        this.update_arrow_position();\r\n    }\r\n\r\n    date_changed() {\r\n        let changed = false;\r\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n\r\n        if (Number(this.task._start) !== Number(new_start_date)) {\r\n            changed = true;\r\n            this.task._start = new_start_date;\r\n        }\r\n\r\n        if (Number(this.task._end) !== Number(new_end_date)) {\r\n            changed = true;\r\n            this.task._end = new_end_date;\r\n        }\r\n\r\n        if (!changed) return;\r\n\r\n        this.gantt.trigger_event('date_change', [\r\n            this.task,\r\n            new_start_date,\r\n            date_utils.add(new_end_date, -1, 'second'),\r\n        ]);\r\n    }\r\n\r\n    progress_changed() {\r\n        const new_progress = this.compute_progress();\r\n        this.task.progress = new_progress;\r\n        this.gantt.trigger_event('progress_change', [this.task, new_progress]);\r\n    }\r\n\r\n    set_action_completed() {\r\n        this.action_completed = true;\r\n        setTimeout(() => (this.action_completed = false), 1000);\r\n    }\r\n\r\n    compute_start_end_date() {\r\n        const bar = this.$bar;\r\n        const x_in_units = bar.getX() / this.gantt.options.column_width;\r\n        const new_start_date = date_utils.add(\r\n            this.gantt.gantt_start,\r\n            x_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n        const width_in_units = bar.getWidth() / this.gantt.options.column_width;\r\n        const new_end_date = date_utils.add(\r\n            new_start_date,\r\n            width_in_units * this.gantt.options.step,\r\n            'hour'\r\n        );\r\n\r\n        return { new_start_date, new_end_date };\r\n    }\r\n\r\n    compute_progress() {\r\n        const progress =\r\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\r\n        return parseInt(progress, 10);\r\n    }\r\n\r\n    compute_x() {\r\n        const { step, column_width } = this.gantt.options;\r\n        const task_start = this.task._start;\r\n        const gantt_start = this.gantt.gantt_start;\r\n\r\n        const diff = date_utils.diff(task_start, gantt_start, 'hour');\r\n        let x = (diff / step) * column_width;\r\n\r\n        if (this.gantt.view_is('Month')) {\r\n            const diff = date_utils.diff(task_start, gantt_start, 'day');\r\n            x = (diff * column_width) / 30;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    compute_y() {\r\n        return (\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.padding +\r\n            this.task._index * (this.height + this.gantt.options.padding)\r\n        );\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.gantt.view_is('Week')) {\r\n            rem = dx % (this.gantt.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 14\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 7);\r\n        } else if (this.gantt.view_is('Month')) {\r\n            rem = dx % (this.gantt.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 60\r\n                    ? 0\r\n                    : this.gantt.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.gantt.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.gantt.options.column_width / 2\r\n                    ? 0\r\n                    : this.gantt.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    update_attr(element, attr, value) {\r\n        value = +value;\r\n        if (!isNaN(value)) {\r\n            element.setAttribute(attr, value);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    update_progressbar_position() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\r\n        this.$bar_progress.setAttribute(\r\n            'width',\r\n            this.$bar.getWidth() * (this.task.progress / 100)\r\n        );\r\n    }\r\n\r\n    update_label_position() {\r\n        const bar = this.$bar,\r\n            label = this.group.querySelector('.bar-label');\r\n\r\n        if (label.getBBox().width > bar.getWidth()) {\r\n            label.classList.add('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\r\n        } else {\r\n            label.classList.remove('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\r\n        }\r\n    }\r\n\r\n    update_handle_position() {\r\n        if (this.invalid) return;\r\n        const bar = this.$bar;\r\n        this.handle_group\r\n            .querySelector('.handle.left')\r\n            .setAttribute('x', bar.getX() + 1);\r\n        this.handle_group\r\n            .querySelector('.handle.right')\r\n            .setAttribute('x', bar.getEndX() - 9);\r\n        const handle = this.group.querySelector('.handle.progress');\r\n        handle &&\r\n            handle.setAttribute('points', this.get_progress_polygon_points());\r\n    }\r\n\r\n    update_arrow_position() {\r\n        this.arrows = this.arrows || [];\r\n        for (let arrow of this.arrows) {\r\n            arrow.update();\r\n        }\r\n    }\r\n}\r\n\r\nfunction isFunction(functionToCheck) {\r\n    var getType = {};\r\n    return (\r\n        functionToCheck &&\r\n        getType.toString.call(functionToCheck) === '[object Function]'\r\n    );\r\n}\r\n","import { createSVG } from './svg_utils';\r\n\r\nexport default class Arrow {\r\n    constructor(gantt, from_task, to_task) {\r\n        this.gantt = gantt;\r\n        this.from_task = from_task;\r\n        this.to_task = to_task;\r\n\r\n        this.calculate_path();\r\n        this.draw();\r\n    }\r\n\r\n    calculate_path() {\r\n        let start_x =\r\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\r\n\r\n        const condition = () =>\r\n            this.to_task.$bar.getX() < start_x + this.gantt.options.padding &&\r\n            start_x > this.from_task.$bar.getX() + this.gantt.options.padding;\r\n\r\n        while (condition()) {\r\n            start_x -= 10;\r\n        }\r\n\r\n        const start_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.from_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2;\r\n        const end_y =\r\n            this.gantt.options.header_height +\r\n            this.gantt.options.bar_height / 2 +\r\n            (this.gantt.options.padding + this.gantt.options.bar_height) *\r\n                this.to_task.task._index +\r\n            this.gantt.options.padding;\r\n\r\n        const from_is_below_to =\r\n            this.from_task.task._index > this.to_task.task._index;\r\n        const curve = this.gantt.options.arrow_curve;\r\n        const clockwise = from_is_below_to ? 1 : 0;\r\n        const curve_y = from_is_below_to ? -curve : curve;\r\n        const offset = from_is_below_to\r\n            ? end_y + this.gantt.options.arrow_curve\r\n            : end_y - this.gantt.options.arrow_curve;\r\n\r\n        this.path = `\r\n            M ${start_x} ${start_y}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n            m -5 -5\r\n            l 5 5\r\n            l -5 5`;\r\n\r\n        if (\r\n            this.to_task.$bar.getX() <\r\n            this.from_task.$bar.getX() + this.gantt.options.padding\r\n        ) {\r\n            const down_1 = this.gantt.options.padding / 2 - curve;\r\n            const down_2 =\r\n                this.to_task.$bar.getY() +\r\n                this.to_task.$bar.getHeight() / 2 -\r\n                curve_y;\r\n            const left = this.to_task.$bar.getX() - this.gantt.options.padding;\r\n\r\n            this.path = `\r\n                M ${start_x} ${start_y}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -5 -5\r\n                l 5 5\r\n                l -5 5`;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.element = createSVG('path', {\r\n            d: this.path,\r\n            'data-from': this.from_task.task.id,\r\n            'data-to': this.to_task.task.id,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.calculate_path();\r\n        this.element.setAttribute('d', this.path);\r\n    }\r\n}\r\n","export default class Popup {\r\n    constructor(parent, custom_html) {\r\n        this.parent = parent;\r\n        this.custom_html = custom_html;\r\n        this.make();\r\n    }\r\n\r\n    make() {\r\n        this.parent.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"pointer\"></div>\r\n        `;\r\n\r\n        this.hide();\r\n\r\n        this.title = this.parent.querySelector('.title');\r\n        this.subtitle = this.parent.querySelector('.subtitle');\r\n        this.pointer = this.parent.querySelector('.pointer');\r\n    }\r\n\r\n    show(options) {\r\n        if (!options.target_element) {\r\n            throw new Error('target_element is required to show popup');\r\n        }\r\n        if (!options.position) {\r\n            options.position = 'left';\r\n        }\r\n        const target_element = options.target_element;\r\n\r\n        if (this.custom_html) {\r\n            let html = this.custom_html(options.task);\r\n            html += '<div class=\"pointer\"></div>';\r\n            this.parent.innerHTML = html;\r\n            this.pointer = this.parent.querySelector('.pointer');\r\n        } else {\r\n            // set data\r\n            this.title.innerHTML = options.title;\r\n            this.subtitle.innerHTML = options.subtitle;\r\n            this.parent.style.width = this.parent.clientWidth + 'px';\r\n        }\r\n\r\n        // set position\r\n        let position_meta;\r\n        if (target_element instanceof HTMLElement) {\r\n            position_meta = target_element.getBoundingClientRect();\r\n        } else if (target_element instanceof SVGElement) {\r\n            position_meta = options.target_element.getBBox();\r\n        }\r\n\r\n        if (options.position === 'left') {\r\n            this.parent.style.left =\r\n                position_meta.x + (position_meta.width + 10) + 'px';\r\n            this.parent.style.top = position_meta.y + 'px';\r\n\r\n            this.pointer.style.transform = 'rotateZ(90deg)';\r\n            this.pointer.style.left = '-7px';\r\n            this.pointer.style.top = '2px';\r\n        }\r\n\r\n        // show\r\n        this.parent.style.opacity = 1;\r\n    }\r\n\r\n    hide() {\r\n        this.parent.style.opacity = 0;\r\n        this.parent.style.left = 0;\r\n    }\r\n}\r\n","import date_utils from './date_utils';\r\nimport date_utils_jalali from './date_utils_jalali';\r\nimport { $, createSVG } from './svg_utils';\r\nimport Bar from './bar';\r\nimport Arrow from './arrow';\r\nimport Popup from './popup';\r\n\r\nimport './gantt.scss';\r\n\r\nconst VIEW_MODE = {\r\n    QUARTER_DAY: 'Quarter Day',\r\n    HALF_DAY: 'Half Day',\r\n    DAY: 'Day',\r\n    WEEK: 'Week',\r\n    MONTH: 'Month',\r\n    YEAR: 'Year',\r\n};\r\n\r\nexport default class Gantt {\r\n    constructor(wrapper, tasks, options) {\r\n        this.setup_wrapper(wrapper);\r\n        this.setup_options(options);\r\n        this.setup_tasks(tasks);\r\n        // initialize with default view mode\r\n        this.change_view_mode();\r\n        this.bind_events();\r\n    }\r\n\r\n    setup_wrapper(element) {\r\n        let svg_element, wrapper_element;\r\n\r\n        // CSS Selector is passed\r\n        if (typeof element === 'string') {\r\n            element = document.querySelector(element);\r\n        }\r\n\r\n        // get the SVGElement\r\n        if (element instanceof HTMLElement) {\r\n            wrapper_element = element;\r\n            svg_element = element.querySelector('svg');\r\n        } else if (element instanceof SVGElement) {\r\n            svg_element = element;\r\n        } else {\r\n            throw new TypeError(\r\n                'Frappé Gantt only supports usage of a string CSS selector,' +\r\n                    \" HTML DOM element or SVG DOM element for the 'element' parameter\"\r\n            );\r\n        }\r\n\r\n        // svg element\r\n        if (!svg_element) {\r\n            // create it\r\n            this.$svg = createSVG('svg', {\r\n                append_to: wrapper_element,\r\n                class: 'gantt',\r\n            });\r\n        } else {\r\n            this.$svg = svg_element;\r\n            this.$svg.classList.add('gantt');\r\n        }\r\n\r\n        // wrapper element\r\n        this.$container = document.createElement('div');\r\n        this.$container.classList.add('gantt-container');\r\n\r\n        const parent_element = this.$svg.parentElement;\r\n        parent_element.appendChild(this.$container);\r\n        this.$container.appendChild(this.$svg);\r\n\r\n        // popup wrapper\r\n        this.popup_wrapper = document.createElement('div');\r\n        this.popup_wrapper.classList.add('popup-wrapper');\r\n        this.$container.appendChild(this.popup_wrapper);\r\n    }\r\n\r\n    setup_options(options) {\r\n        const default_options = {\r\n            header_height: 50,\r\n            column_width: 30,\r\n            step: 24,\r\n            view_modes: [...Object.values(VIEW_MODE)],\r\n            bar_height: 20,\r\n            bar_corner_radius: 3,\r\n            arrow_curve: 5,\r\n            padding: 18,\r\n            view_mode: 'Day',\r\n            date_format: 'YYYY-MM-DD',\r\n            popup_trigger: 'click',\r\n            custom_popup_html: null,\r\n            language: 'en',\r\n            calendar: 'gregorian'\r\n        };\r\n        this.options = Object.assign({}, default_options, options);\r\n        this.my_date_utils = this.options.calendar == \"jalali\"? date_utils_jalali: date_utils;\r\n    }\r\n\r\n    setup_tasks(tasks) {\r\n        // prepare tasks\r\n        this.tasks = tasks.map((task, i) => {\r\n            // convert to Date objects\r\n            task._start = this.my_date_utils.parse(task.start);\r\n            task._end = this.my_date_utils.parse(task.end);\r\n\r\n            // make task invalid if duration too large\r\n            if (this.my_date_utils.diff(task._end, task._start, 'year') > 10) {\r\n                task.end = null;\r\n            }\r\n\r\n            // cache index\r\n            task._index = i;\r\n\r\n            // invalid dates\r\n            if (!task.start && !task.end) {\r\n                const today = this.my_date_utils.today();\r\n                task._start = today;\r\n                task._end = this.my_date_utils.add(today, 2, 'day');\r\n            }\r\n\r\n            if (!task.start && task.end) {\r\n                task._start = this.my_date_utils.add(task._end, -2, 'day');\r\n            }\r\n\r\n            if (task.start && !task.end) {\r\n                task._end = this.my_date_utils.add(task._start, 2, 'day');\r\n            }\r\n\r\n            // if hours is not set, assume the last day is full day\r\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n            const task_end_values = this.my_date_utils.get_date_values(task._end);\r\n            if (task_end_values.slice(3).every((d) => d === 0)) {\r\n                task._end = this.my_date_utils.add(task._end, 24, 'hour');\r\n            }\r\n\r\n            // invalid flag\r\n            if (!task.start || !task.end) {\r\n                task.invalid = true;\r\n            }\r\n\r\n            // dependencies\r\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\r\n                let deps = [];\r\n                if (task.dependencies) {\r\n                    deps = task.dependencies\r\n                        .split(',')\r\n                        .map((d) => d.trim())\r\n                        .filter((d) => d);\r\n                }\r\n                task.dependencies = deps;\r\n            }\r\n\r\n            // uids\r\n            if (!task.id) {\r\n                task.id = generate_id(task);\r\n            }\r\n\r\n            return task;\r\n        });\r\n\r\n        this.setup_dependencies();\r\n    }\r\n\r\n    setup_dependencies() {\r\n        this.dependency_map = {};\r\n        for (let t of this.tasks) {\r\n            for (let d of t.dependencies) {\r\n                this.dependency_map[d] = this.dependency_map[d] || [];\r\n                this.dependency_map[d].push(t.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh(tasks) {\r\n        this.setup_tasks(tasks);\r\n        this.change_view_mode();\r\n    }\r\n\r\n    change_view_mode(mode = this.options.view_mode) {\r\n        this.update_view_scale(mode);\r\n        this.setup_dates();\r\n        this.render();\r\n        // fire viewmode_change event\r\n        this.trigger_event('view_change', [mode]);\r\n    }\r\n\r\n    update_view_scale(view_mode) {\r\n        this.options.view_mode = view_mode;\r\n\r\n        if (view_mode === VIEW_MODE.DAY) {\r\n            this.options.step = 24;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\r\n            this.options.step = 24 / 2;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\r\n            this.options.step = 24 / 4;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.WEEK) {\r\n            this.options.step = 24 * 7;\r\n            this.options.column_width = 140;\r\n        } else if (view_mode === VIEW_MODE.MONTH) {\r\n            this.options.step = 24 * 30;\r\n            this.options.column_width = 120;\r\n        } else if (view_mode === VIEW_MODE.YEAR) {\r\n            this.options.step = 24 * 365;\r\n            this.options.column_width = 120;\r\n        }\r\n    }\r\n\r\n    setup_dates() {\r\n        this.setup_gantt_dates();\r\n        this.setup_date_values();\r\n    }\r\n\r\n    setup_gantt_dates() {\r\n        this.gantt_start = this.gantt_end = null;\r\n\r\n        for (let task of this.tasks) {\r\n            // set global start and end date\r\n            if (!this.gantt_start || task._start < this.gantt_start) {\r\n                this.gantt_start = task._start;\r\n            }\r\n            if (!this.gantt_end || task._end > this.gantt_end) {\r\n                this.gantt_end = task._end;\r\n            }\r\n        }\r\n\r\n        this.gantt_start = this.my_date_utils.start_of(this.gantt_start, 'day');\r\n        this.gantt_end = this.my_date_utils.start_of(this.gantt_end, 'day');\r\n\r\n        // add date padding on both sides\r\n        if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\r\n            this.gantt_start = this.my_date_utils.add(this.gantt_start, -7, 'day');\r\n            this.gantt_end = this.my_date_utils.add(this.gantt_end, 7, 'day');\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            this.gantt_start = this.my_date_utils.start_of(this.gantt_start, 'year');\r\n            this.gantt_end = this.my_date_utils.add(this.gantt_end, 1, 'year');\r\n        } else if (this.view_is(VIEW_MODE.YEAR)) {\r\n            this.gantt_start = this.my_date_utils.add(this.gantt_start, -2, 'year');\r\n            this.gantt_end = this.my_date_utils.add(this.gantt_end, 2, 'year');\r\n        } else {\r\n            this.gantt_start = this.my_date_utils.add(this.gantt_start, -1, 'month');\r\n            this.gantt_end = this.my_date_utils.add(this.gantt_end, 1, 'month');\r\n        }\r\n    }\r\n\r\n    setup_date_values() {\r\n        this.dates = [];\r\n        let cur_date = null;\r\n\r\n        while (cur_date === null || cur_date < this.gantt_end) {\r\n            if (!cur_date) {\r\n                cur_date = this.my_date_utils.clone(this.gantt_start);\r\n            } else {\r\n                if (this.view_is(VIEW_MODE.YEAR)) {\r\n                    cur_date = this.my_date_utils.add(cur_date, 1, 'year');\r\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n                    cur_date = this.my_date_utils.add(cur_date, 1, 'month');\r\n                } else {\r\n                    cur_date = this.my_date_utils.add(\r\n                        cur_date,\r\n                        this.options.step,\r\n                        'hour'\r\n                    );\r\n                }\r\n            }\r\n            this.dates.push(cur_date);\r\n        }\r\n    }\r\n\r\n    bind_events() {\r\n        this.bind_grid_click();\r\n        this.bind_bar_events();\r\n    }\r\n\r\n    render() {\r\n        this.clear();\r\n        this.setup_layers();\r\n        this.make_grid();\r\n        this.make_dates();\r\n        this.make_bars();\r\n        this.make_arrows();\r\n        this.map_arrows_on_bars();\r\n        this.set_width();\r\n        this.set_scroll_position();\r\n    }\r\n\r\n    setup_layers() {\r\n        this.layers = {};\r\n        const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details'];\r\n        // make group layers\r\n        for (let layer of layers) {\r\n            this.layers[layer] = createSVG('g', {\r\n                class: layer,\r\n                append_to: this.$svg,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_grid() {\r\n        this.make_grid_background();\r\n        this.make_grid_rows();\r\n        this.make_grid_header();\r\n        this.make_grid_ticks();\r\n        this.make_grid_highlights();\r\n    }\r\n\r\n    make_grid_background() {\r\n        const grid_width = this.dates.length * this.options.column_width;\r\n        const grid_height =\r\n            this.options.header_height +\r\n            this.options.padding +\r\n            (this.options.bar_height + this.options.padding) *\r\n                this.tasks.length;\r\n\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: grid_width,\r\n            height: grid_height,\r\n            class: 'grid-background',\r\n            append_to: this.layers.grid,\r\n        });\r\n\r\n        $.attr(this.$svg, {\r\n            height: grid_height + this.options.padding + 100,\r\n            width: '100%',\r\n        });\r\n    }\r\n\r\n    make_grid_rows() {\r\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\r\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\r\n\r\n        const row_width = this.dates.length * this.options.column_width;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n\r\n        let row_y = this.options.header_height + this.options.padding / 2;\r\n\r\n        for (let task of this.tasks) {\r\n            createSVG('rect', {\r\n                x: 0,\r\n                y: row_y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                append_to: rows_layer,\r\n            });\r\n\r\n            createSVG('line', {\r\n                x1: 0,\r\n                y1: row_y + row_height,\r\n                x2: row_width,\r\n                y2: row_y + row_height,\r\n                class: 'row-line',\r\n                append_to: lines_layer,\r\n            });\r\n\r\n            row_y += this.options.bar_height + this.options.padding;\r\n        }\r\n    }\r\n\r\n    make_grid_header() {\r\n        const header_width = this.dates.length * this.options.column_width;\r\n        const header_height = this.options.header_height + 10;\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: header_width,\r\n            height: header_height,\r\n            class: 'grid-header',\r\n            append_to: this.layers.grid,\r\n        });\r\n    }\r\n\r\n    make_grid_ticks() {\r\n        let tick_x = 0;\r\n        let tick_y = this.options.header_height + this.options.padding / 2;\r\n        let tick_height =\r\n            (this.options.bar_height + this.options.padding) *\r\n            this.tasks.length;\r\n\r\n        for (let date of this.dates) {\r\n            let tick_class = 'tick';\r\n            // thick tick for monday\r\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick tick for first week\r\n            if (\r\n                this.view_is(VIEW_MODE.WEEK) &&\r\n                date.getDate() >= 1 &&\r\n                date.getDate() < 8\r\n            ) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick ticks for quarters\r\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\r\n                tick_class += ' thick';\r\n            }\r\n\r\n            createSVG('path', {\r\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n                class: tick_class,\r\n                append_to: this.layers.grid,\r\n            });\r\n\r\n            if (this.view_is(VIEW_MODE.MONTH)) {\r\n                tick_x +=\r\n                    (this.my_date_utils.get_days_in_month(date) *\r\n                        this.options.column_width) /\r\n                    30;\r\n            } else {\r\n                tick_x += this.options.column_width;\r\n            }\r\n        }\r\n    }\r\n\r\n    make_grid_highlights() {\r\n        // highlight today's date\r\n        if (this.view_is(VIEW_MODE.DAY)) {\r\n            const x =\r\n                (this.my_date_utils.diff(this.my_date_utils.today(), this.gantt_start, 'hour') /\r\n                    this.options.step) *\r\n                this.options.column_width;\r\n            const y = 0;\r\n\r\n            const width = this.options.column_width;\r\n            const height =\r\n                (this.options.bar_height + this.options.padding) *\r\n                    this.tasks.length +\r\n                this.options.header_height +\r\n                this.options.padding / 2;\r\n\r\n            createSVG('rect', {\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                class: 'today-highlight',\r\n                append_to: this.layers.grid,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_dates() {\r\n        for (let date of this.get_dates_to_draw()) {\r\n            createSVG('text', {\r\n                x: date.lower_x,\r\n                y: date.lower_y,\r\n                innerHTML: date.lower_text,\r\n                class: 'lower-text',\r\n                append_to: this.layers.date,\r\n            });\r\n\r\n            if (date.upper_text) {\r\n                const $upper_text = createSVG('text', {\r\n                    x: date.upper_x,\r\n                    y: date.upper_y,\r\n                    innerHTML: date.upper_text,\r\n                    class: 'upper-text',\r\n                    append_to: this.layers.date,\r\n                });\r\n\r\n                // remove out-of-bound dates\r\n                if (\r\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\r\n                ) {\r\n                    $upper_text.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get_dates_to_draw() {\r\n        let last_date = null;\r\n        const dates = this.dates.map((date, i) => {\r\n            const d = this.get_date_info(date, last_date, i);\r\n            last_date = date;\r\n            return d;\r\n        });\r\n        return dates;\r\n    }\r\n\r\n    get_date_info(date, last_date, i) {\r\n        if (!last_date) {\r\n            last_date = this.my_date_utils.add(date, 1, 'year');\r\n        }\r\n        const date_text = {\r\n            'Quarter Day_lower': this.my_date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            'Half Day_lower': this.my_date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            Day_lower:\r\n                date.getDate() !== last_date.getDate()\r\n                    ? this.my_date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Week_lower:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? this.my_date_utils.format(date, 'D MMM', this.options.language)\r\n                    : this.my_date_utils.format(date, 'D', this.options.language),\r\n            Month_lower: this.my_date_utils.format(date, 'MMMM', this.options.language),\r\n            Year_lower: this.my_date_utils.format(date, 'YYYY', this.options.language),\r\n            'Quarter Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? this.my_date_utils.format(date, 'D MMM', this.options.language)\r\n                    : '',\r\n            'Half Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date.getMonth() !== last_date.getMonth()\r\n                        ? this.my_date_utils.format(\r\n                              date,\r\n                              'D MMM',\r\n                              this.options.language\r\n                          )\r\n                        : this.my_date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Day_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? this.my_date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Week_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? this.my_date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Month_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? this.my_date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n            Year_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? this.my_date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n        };\r\n\r\n        const base_pos = {\r\n            x: i * this.options.column_width,\r\n            lower_y: this.options.header_height,\r\n            upper_y: this.options.header_height - 25,\r\n        };\r\n\r\n        const x_pos = {\r\n            'Quarter Day_lower': (this.options.column_width * 4) / 2,\r\n            'Quarter Day_upper': 0,\r\n            'Half Day_lower': (this.options.column_width * 2) / 2,\r\n            'Half Day_upper': 0,\r\n            Day_lower: this.options.column_width / 2,\r\n            Day_upper: (this.options.column_width * 30) / 2,\r\n            Week_lower: 0,\r\n            Week_upper: (this.options.column_width * 4) / 2,\r\n            Month_lower: this.options.column_width / 2,\r\n            Month_upper: (this.options.column_width * 12) / 2,\r\n            Year_lower: this.options.column_width / 2,\r\n            Year_upper: (this.options.column_width * 30) / 2,\r\n        };\r\n\r\n        return {\r\n            upper_text: date_text[`${this.options.view_mode}_upper`],\r\n            lower_text: date_text[`${this.options.view_mode}_lower`],\r\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\r\n            upper_y: base_pos.upper_y,\r\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\r\n            lower_y: base_pos.lower_y,\r\n        };\r\n    }\r\n\r\n    make_bars() {\r\n        this.bars = this.tasks.map((task) => {\r\n            const bar = new Bar(this, task);\r\n            this.layers.bar.appendChild(bar.group);\r\n            return bar;\r\n        });\r\n    }\r\n\r\n    make_arrows() {\r\n        this.arrows = [];\r\n        for (let task of this.tasks) {\r\n            let arrows = [];\r\n            arrows = task.dependencies\r\n                .map((task_id) => {\r\n                    const dependency = this.get_task(task_id);\r\n                    if (!dependency) return;\r\n                    const arrow = new Arrow(\r\n                        this,\r\n                        this.bars[dependency._index], // from_task\r\n                        this.bars[task._index] // to_task\r\n                    );\r\n                    this.layers.arrow.appendChild(arrow.element);\r\n                    return arrow;\r\n                })\r\n                .filter(Boolean); // filter falsy values\r\n            this.arrows = this.arrows.concat(arrows);\r\n        }\r\n    }\r\n\r\n    map_arrows_on_bars() {\r\n        for (let bar of this.bars) {\r\n            bar.arrows = this.arrows.filter((arrow) => {\r\n                return (\r\n                    arrow.from_task.task.id === bar.task.id ||\r\n                    arrow.to_task.task.id === bar.task.id\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    set_width() {\r\n        const cur_width = this.$svg.getBoundingClientRect().width;\r\n        const actual_width = this.$svg\r\n            .querySelector('.grid .grid-row')\r\n            .getAttribute('width');\r\n        if (cur_width < actual_width) {\r\n            this.$svg.setAttribute('width', actual_width);\r\n        }\r\n    }\r\n\r\n    set_scroll_position() {\r\n        const parent_element = this.$svg.parentElement;\r\n        if (!parent_element) return;\r\n\r\n        const hours_before_first_task = this.my_date_utils.diff(\r\n            this.get_oldest_starting_date(),\r\n            this.gantt_start,\r\n            'hour'\r\n        );\r\n\r\n        const scroll_pos =\r\n            (hours_before_first_task / this.options.step) *\r\n                this.options.column_width -\r\n            this.options.column_width;\r\n\r\n        parent_element.scrollLeft = scroll_pos;\r\n    }\r\n\r\n    bind_grid_click() {\r\n        $.on(\r\n            this.$svg,\r\n            this.options.popup_trigger,\r\n            '.grid-row, .grid-header',\r\n            () => {\r\n                this.unselect_all();\r\n                this.hide_popup();\r\n            }\r\n        );\r\n    }\r\n\r\n    bind_bar_events() {\r\n        let is_dragging = false;\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing_left = false;\r\n        let is_resizing_right = false;\r\n        let parent_bar_id = null;\r\n        let bars = []; // instanceof Bar\r\n        this.bar_being_dragged = null;\r\n\r\n        function action_in_progress() {\r\n            return is_dragging || is_resizing_left || is_resizing_right;\r\n        }\r\n\r\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\r\n            const bar_wrapper = $.closest('.bar-wrapper', element);\r\n\r\n            if (element.classList.contains('left')) {\r\n                is_resizing_left = true;\r\n            } else if (element.classList.contains('right')) {\r\n                is_resizing_right = true;\r\n            } else if (element.classList.contains('bar-wrapper')) {\r\n                is_dragging = true;\r\n            }\r\n\r\n            bar_wrapper.classList.add('active');\r\n\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\r\n            const ids = [\r\n                parent_bar_id,\r\n                ...this.get_all_dependent_tasks(parent_bar_id),\r\n            ];\r\n            bars = ids.map((id) => this.get_bar(id));\r\n\r\n            this.bar_being_dragged = parent_bar_id;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.ox = $bar.getX();\r\n                $bar.oy = $bar.getY();\r\n                $bar.owidth = $bar.getWidth();\r\n                $bar.finaldx = 0;\r\n            });\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!action_in_progress()) return;\r\n            const dx = e.offsetX - x_on_start;\r\n            const dy = e.offsetY - y_on_start;\r\n\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                $bar.finaldx = this.get_snap_position(dx);\r\n                this.hide_popup();\r\n                if (is_resizing_left) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                            width: $bar.owidth - $bar.finaldx,\r\n                        });\r\n                    } else {\r\n                        bar.update_bar_position({\r\n                            x: $bar.ox + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (is_resizing_right) {\r\n                    if (parent_bar_id === bar.task.id) {\r\n                        bar.update_bar_position({\r\n                            width: $bar.owidth + $bar.finaldx,\r\n                        });\r\n                    }\r\n                } else if (is_dragging) {\r\n                    bar.update_bar_position({ x: $bar.ox + $bar.finaldx });\r\n                }\r\n            });\r\n        });\r\n\r\n        document.addEventListener('mouseup', (e) => {\r\n            if (is_dragging || is_resizing_left || is_resizing_right) {\r\n                bars.forEach((bar) => bar.group.classList.remove('active'));\r\n            }\r\n\r\n            is_dragging = false;\r\n            is_resizing_left = false;\r\n            is_resizing_right = false;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', (e) => {\r\n            this.bar_being_dragged = null;\r\n            bars.forEach((bar) => {\r\n                const $bar = bar.$bar;\r\n                if (!$bar.finaldx) return;\r\n                bar.date_changed();\r\n                bar.set_action_completed();\r\n            });\r\n        });\r\n\r\n        this.bind_bar_progress();\r\n    }\r\n\r\n    bind_bar_progress() {\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing = null;\r\n        let bar = null;\r\n        let $bar_progress = null;\r\n        let $bar = null;\r\n\r\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\r\n            is_resizing = true;\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\r\n            const id = $bar_wrapper.getAttribute('data-id');\r\n            bar = this.get_bar(id);\r\n\r\n            $bar_progress = bar.$bar_progress;\r\n            $bar = bar.$bar;\r\n\r\n            $bar_progress.finaldx = 0;\r\n            $bar_progress.owidth = $bar_progress.getWidth();\r\n            $bar_progress.min_dx = -$bar_progress.getWidth();\r\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!is_resizing) return;\r\n            let dx = e.offsetX - x_on_start;\r\n            let dy = e.offsetY - y_on_start;\r\n\r\n            if (dx > $bar_progress.max_dx) {\r\n                dx = $bar_progress.max_dx;\r\n            }\r\n            if (dx < $bar_progress.min_dx) {\r\n                dx = $bar_progress.min_dx;\r\n            }\r\n\r\n            const $handle = bar.$handle_progress;\r\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\r\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\r\n            $bar_progress.finaldx = dx;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', () => {\r\n            is_resizing = false;\r\n            if (!($bar_progress && $bar_progress.finaldx)) return;\r\n            bar.progress_changed();\r\n            bar.set_action_completed();\r\n        });\r\n    }\r\n\r\n    get_all_dependent_tasks(task_id) {\r\n        let out = [];\r\n        let to_process = [task_id];\r\n        while (to_process.length) {\r\n            const deps = to_process.reduce((acc, curr) => {\r\n                acc = acc.concat(this.dependency_map[curr]);\r\n                return acc;\r\n            }, []);\r\n\r\n            out = out.concat(deps);\r\n            to_process = deps.filter((d) => !to_process.includes(d));\r\n        }\r\n\r\n        return out.filter(Boolean);\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.view_is(VIEW_MODE.WEEK)) {\r\n            rem = dx % (this.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 14\r\n                    ? 0\r\n                    : this.options.column_width / 7);\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            rem = dx % (this.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 60\r\n                    ? 0\r\n                    : this.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 2\r\n                    ? 0\r\n                    : this.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    unselect_all() {\r\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\r\n            el.classList.remove('active');\r\n        });\r\n    }\r\n\r\n    view_is(modes) {\r\n        if (typeof modes === 'string') {\r\n            return this.options.view_mode === modes;\r\n        }\r\n\r\n        if (Array.isArray(modes)) {\r\n            return modes.some((mode) => this.options.view_mode === mode);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    get_task(id) {\r\n        return this.tasks.find((task) => {\r\n            return task.id === id;\r\n        });\r\n    }\r\n\r\n    get_bar(id) {\r\n        return this.bars.find((bar) => {\r\n            return bar.task.id === id;\r\n        });\r\n    }\r\n\r\n    show_popup(options) {\r\n        if (!this.popup) {\r\n            this.popup = new Popup(\r\n                this.popup_wrapper,\r\n                this.options.custom_popup_html\r\n            );\r\n        }\r\n        this.popup.show(options);\r\n    }\r\n\r\n    hide_popup() {\r\n        this.popup && this.popup.hide();\r\n    }\r\n\r\n    trigger_event(event, args) {\r\n        if (this.options['on_' + event]) {\r\n            this.options['on_' + event].apply(null, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the oldest starting date from the list of tasks\r\n     *\r\n     * @returns Date\r\n     * @memberof Gantt\r\n     */\r\n    get_oldest_starting_date() {\r\n        return this.tasks\r\n            .map((task) => task._start)\r\n            .reduce((prev_date, cur_date) =>\r\n                cur_date <= prev_date ? cur_date : prev_date\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Clear all elements from the parent svg element\r\n     *\r\n     * @memberof Gantt\r\n     */\r\n    clear() {\r\n        this.$svg.innerHTML = '';\r\n    }\r\n}\r\n\r\nGantt.VIEW_MODE = VIEW_MODE;\r\n\r\nfunction generate_id(task) {\r\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\r\n}\r\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","dateTimeFormatters","getDateTimeFormatter","lang","f","Intl","DateTimeFormat","month","format","format_string","month_name","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","YEAR$1","MONTH$1","DAY$1","HOUR$1","MINUTE$1","SECOND$1","MILLISECOND$1","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","mod","leap_gregorian","GREGORIAN_EPOCH","gregorian_to_jd","day","jd_to_gregorian","jd","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","persian_to_jd","epbase","epyear","jd_to_persian","cycle","cyear","ycycle","aux1","aux2","yday","ceil","window","digits_fa2en","text","fromCharCode","charCodeAt","pad2","number","persian_to_jd_fixed","yearDiff","parseDate","string","convertToPersian","match","exec","separator","timeSeparator","isISO","hour","minute","millis","tz","isNonLocal","tzOffset","persian","setUTCMinutes","getUTCMinutes","getTimezoneOffset","JDate","second","millisecond","_d","arguments","_cached_date_ts","_cached_date","_cached_utc_date_ts","_cached_utc_date","prototype","_persianDate","_persianUTCDate","getUTCFullYear","getUTCMonth","getUTCDate","_setPersianDate","which","dayValue","undefined","new_date","setFullYear","setMonth","_setUTCPersianDate","setUTCFullYear","setUTCMonth","yearValue","monthValue","UTC","dateProps","createWrapper","k","apply","date_utils_jalali","setHours","d_a","d_b","isLeapYearJalali","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","calendar","assign","my_date_utils","start","end","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","args","prev_date"],"mappings":"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"}